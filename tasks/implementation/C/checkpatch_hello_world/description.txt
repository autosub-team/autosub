As a programmer working on a project - whether it's open source or not - it is
important that all team members stick to a common coding style.

Throughout this course, we will stick to the coding style used in the Linux
kernel, as it is well defined, and there is a tool that can be used to check
the source code for coding style violations. From now on, you are expected to
check all the source code you submit against this coding style. If you fail
to do so, your source will be rejected -- no matter if it is functionally
correct or not!

Both, the coding style documentation as well as the checker are available with
the linux source code. To obtain it, you can either go to kernel.org, download
the kernel source and find the files there, or you can directly download them
from github:

https://raw.githubusercontent.com/torvalds/linux/master/Documentation/CodingStyle
https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl

furthermore, one of the checks of checkpatch.pl needs one additional file:

https://raw.githubusercontent.com/torvalds/linux/master/scripts/spelling.txt

Usually (as the name says), checkpatch.pl is run against a patch file. In order
to run it against a full source file, use the -f flag. Also, by default
checkpatch.pl expects to be run against a full linux kernel source tree. To
avoid downloading the full source, use the --no-tree flag. So to check hello.c
use the command:

./checkpatch.pl -f --no-tree hello.c

After you successfully checked your hello.c, send me the new version of hello.c
as a result for task2. You do not have to send me checkpatch.pl, I got my
own version of it!

I'm looking forward to your submission!
You get 1 Bonus Point for solving this task.


